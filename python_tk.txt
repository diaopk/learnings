# This note talk about the basic of Python tkinter
# This is a librery from python

* Basic structure of program
    - import tkinter
    - declare a Tk() to a variable
    - pack this varibale to the back by using pack()
    - start a mainloop()

* Some basic definitions
    - window
      this term has different meanings in different contexts, but in 
      general it refers to a rectangular area somewhere on your display
    
    - top-level window
      A window that exists independently on your screen. It will be 
      decorated with the standard frame and controls for yours system's
      desktop manager.

    - widget
      The generic term for any of the building blocks that make up an 
      application in a graphical user interface

    - frame
      In Tkinter, the Frame widget is the basic unit of organization for 
      complex layouts. A frame is a rectangular area that can contain
      other widgets

    - child, parent
      When any widget is created, a parent-child relationship is created. 
      For example, if you place a text label inside a frame, the frame is 
      the parent of the label

* A method to display weights in some ways
    - grid()
      This method registers a widget with the grid geometry manager. If you
      do not do this, the widget will only exist internally.

      - arguments/options
        - column : the position of column
        - colomnspac : the number of column's cell to occupy
        - in_ : To register w as a child of some widget w2, use in_=w2. The
          new parent w2 must be descendant of the parent widget used when
          w was created
        - ipadx : internal x padding
        - ipady : 
        - padx : External x padding
        - pady
        - row
        - rowspan
        - sticky : This option determines how to distribute any extra space
          within the cell that is not taken up by the widget at its natural
          size
          sticky=tk.NE : north east
          sticky=tk.SE : south east
          sticky=tk.SW : south west
          sticky=tk.NW : north west
          sticky=tk.N+tk.E+tk.S+tk.W : to stretch the widget both 
          horizontally and vertically to fill the cell

          NW    N       NE

          W     CENTER  E

          SW    S       SE

        - bitmap : usually for buttons
        - cursor : 

    - other grid management methods
        - grid_bbox(column=None, row=None, col2=None, row=None)
        - grid_forget() : this method makes widget disppear from the screen
        - grid_info() : Returns a dictinary whose keys are w's option names
          , with the corresponding values of those options
        - grid_location(x, y) : Given a corrdinates (x, y) relative to the 
          containing widget, this method returns a tuple(col, row) descri
          bing what cell of w's grid system contains that screen coordinate
        - grid_remove() : the widget's are remembered. so if you use grid()
          it again, it will use the same grid configuration options
        - grid_size() : Returns a 2-tuple containing the number of columns 
          and the number of rows
        - grid_slaves(row=None, column=None) : Returns a list of the widget
          s managed by the widget w. If no arguments are provided, you'll 
          get a list of all the managed widgets.

    - Image
        - tk.BitmapImage(file=f, backgourd=b, foreground=c)
        - tk.PhotoImage(file=f))

    - pack() : This geomery manager organizes widgets in blocks before 
      placing them in the parent widget

    - place() : This geomerty manager organizes widgets by placing them in 
      a specific position in the parent widget

* Tkinter Widgets
        - Button
        - Canvas
        - Checkbutton
        - Entry
        - Frame
        - Label
        - Listbox
        - Menubutton
        - Menu
        - Message
        - Radiobutton
        - Scale
        - Scrollbar
        - Text
        - Toplevel
        - Spinbox
        - PaneWindow
        - LabelFrame
        - tkMessageBox

